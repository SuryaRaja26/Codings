import  java.util.*;

public class GFG {

    static class Stack {
        static Queue<Integer> q1 = new LinkedList<Integer>();
        static Queue<Integer> q2 = new LinkedList<Integer>();
        static int current;

        static public void push(int x) {
            q2.add(x);
            while (!q1.isEmpty()) {
                q2.add(q1.peek());
                q1.remove();
            }
            Queue<Integer> q3 = q1;
            q1 = q2;
            q2 = q3;
        }

       static public void pop() {
            if (q1.isEmpty()) {
                return;
            }
            q1.remove();
        }

        static public int top() {
            if (q1.isEmpty()) {
                return -1;
            }
            return q1.peek();
        }

       static public int size() {
            return q1.size();
        }
    }

    public static void main(String[] args) {
        Stack s = new Stack();
        s.push(1);
        s.push(2);
        s.push(3);

        System.out.println("current size: " + s.size());
        System.out.println(s.top());
        s.pop();
        System.out.println(s.top());
        s.pop();
        System.out.println(s.top());

        System.out.println("current size: " + s.size());
    }
}


