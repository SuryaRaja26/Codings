public class Binarysearch {
    Node root;
    class Node{
        int data;
        Node left;
        Node right;
        Node(int data){
            this.data=data;
        }
    }
    Binarysearch(){
        root=null;
    }
    public void addnode(int data){

        root=addnode(root,data);
    }
    public Node addnode(Node root,int data){
        if(root==null){
            root=new Node(data);
            return root;
        }
        if(root.data>data){
            root.left=addnode(root.left,data);
        }
        else {
            root.right=addnode(root.right,data);
        }
        return root;
    }
    public void preorder(Node root){
        if(root==null)
            return;
        System.out.print(root.data+" ");
        preorder(root.left);
        preorder(root.right);
    }
    public void findkey(Node root,int key){
        if(root==null || key==root.data){
            System.out.println(root.data);
            return;
        }
        if(root.data>key){
            findkey(root.left,key);
        }
        else
            findkey(root.right,key);
    }

    public static void main(String[] args) {
        Binarysearch bs=new Binarysearch();
        bs.addnode(5);
        bs.addnode( 2);
        bs.addnode(6);
        bs.addnode(1);
        bs.preorder(bs.root);
        bs.findkey(bs.root,7);

    }

}
